# Problem: Minimize Malware Spread - https://leetcode.com/problems/minimize-malware-spread/

class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        mp = defaultdict(list)
        total = 0
        infect = set(initial)
        value = set()
        rows = len(graph)
        cols = len(graph[0])
        for row in range(rows):
            for col in range(cols):
                if graph[row][col] == 1 and row != col:
                    mp[row].append(col)
        def dfs(node):
            nonlocal flag
             
            c = 1
            for chiled in mp[node]:
                if  chiled not in visited  and chiled in infect:
                    flag = False
                    return -c
                if chiled not in visited :
                    visited.add(chiled)
                    c += dfs(chiled)
                    
            return c

        
        for i in initial:
            flag = True
        
            visited = set()
            visited.add(i)
            connection = dfs(i)
            if not flag:
                value.add((i,0))
            else:
                value.add((i,connection))
        res = float('-inf')
        ans = 0
        print(value)
        for i , val in sorted(value):
            if val > res:
                res = val
                ans = i
        return ans
